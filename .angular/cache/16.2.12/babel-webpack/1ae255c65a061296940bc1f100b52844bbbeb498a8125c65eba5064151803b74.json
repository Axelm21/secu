{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../api.service\";\nimport * as i2 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor(apiService) {\n    this.apiService = apiService;\n    this.credentials = {};\n  }\n  login() {\n    console.log(this.credentials);\n    this.apiService.login(this.credentials).subscribe(response => {\n      // Gérer la réponse de l'API après la connexion réussie\n      console.log('Réponse de connexion:', response);\n    }, error => {\n      // Gérer les erreurs lors de la connexion\n      console.error('Erreur de connexion:', error);\n      if (error.error && error.error.text) {\n        console.log('Contenu de la réponse:', error.error.text);\n      }\n    });\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.ApiService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 9,\n    vars: 2,\n    consts: [[3, \"ngSubmit\"], [\"name\", \"email\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵelementStart(1, \"label\");\n        i0.ɵɵtext(2, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_3_listener($event) {\n          return ctx.credentials.email = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"label\");\n        i0.ɵɵtext(5, \"Mot de passe\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_6_listener($event) {\n          return ctx.credentials.password = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"button\", 3);\n        i0.ɵɵtext(8, \"Se connecter !\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.credentials.email);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.credentials.password);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.NgModel, i2.NgForm],\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["LoginComponent","constructor","apiService","credentials","login","console","log","subscribe","response","error","text","_","i0","ɵɵdirectiveInject","i1","ApiService","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","LoginComponent_Template_form_ngSubmit_0_listener","ɵɵtext","ɵɵelementEnd","LoginComponent_Template_input_ngModelChange_3_listener","$event","email","LoginComponent_Template_input_ngModelChange_6_listener","password","ɵɵadvance","ɵɵproperty"],"sources":["/Users/coach/Desktop/secu/secu/src/app/login/login.component.ts","/Users/coach/Desktop/secu/secu/src/app/login/login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { LocalStorageCookiesComponent } from '../local-storage-cookies/local-storage-cookies.component';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n})\nexport class LoginComponent {\n  credentials: any = {};\n\n  constructor(private apiService: ApiService) {}\n\n  login(): void {\n    console.log(this.credentials);\n    this.apiService.login(this.credentials).subscribe(\n      (response) => {\n        // Gérer la réponse de l'API après la connexion réussie\n        console.log('Réponse de connexion:', response);\n      },\n      (error) => {\n        // Gérer les erreurs lors de la connexion\n        console.error('Erreur de connexion:', error);\n        if (error.error && error.error.text) {\n          console.log('Contenu de la réponse:', error.error.text);\n        }\n      }\n    ); \n       \n  }\n}\n","<!-- login.component.html -->\n\n<form (ngSubmit)=\"login()\">\n    <label>Email</label>\n    <input [(ngModel)]=\"credentials.email\" name=\"email\" required>\n  \n    <label>Mot de passe</label>\n    <input [(ngModel)]=\"credentials.password\" name=\"password\" required>\n  \n    <button type=\"submit\">Se connecter !</button>\n  </form>\n  "],"mappings":";;;AAQA,OAAM,MAAOA,cAAc;EAGzBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAF9B,KAAAC,WAAW,GAAQ,EAAE;EAEwB;EAE7CC,KAAKA,CAAA;IACHC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,WAAW,CAAC;IAC7B,IAAI,CAACD,UAAU,CAACE,KAAK,CAAC,IAAI,CAACD,WAAW,CAAC,CAACI,SAAS,CAC9CC,QAAQ,IAAI;MACX;MACAH,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEE,QAAQ,CAAC;IAChD,CAAC,EACAC,KAAK,IAAI;MACR;MACAJ,OAAO,CAACI,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,IAAIA,KAAK,CAACA,KAAK,IAAIA,KAAK,CAACA,KAAK,CAACC,IAAI,EAAE;QACnCL,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEG,KAAK,CAACA,KAAK,CAACC,IAAI,CAAC;;IAE3D,CAAC,CACF;EAEH;EAAC,QAAAC,CAAA,G;qBArBUX,cAAc,EAAAY,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAdhB,cAAc;IAAAiB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCN3BX,EAAA,CAAAa,cAAA,cAA2B;QAArBb,EAAA,CAAAc,UAAA,sBAAAC,iDAAA;UAAA,OAAYH,GAAA,CAAApB,KAAA,EAAO;QAAA,EAAC;QACtBQ,EAAA,CAAAa,cAAA,YAAO;QAAAb,EAAA,CAAAgB,MAAA,YAAK;QAAAhB,EAAA,CAAAiB,YAAA,EAAQ;QACpBjB,EAAA,CAAAa,cAAA,eAA6D;QAAtDb,EAAA,CAAAc,UAAA,2BAAAI,uDAAAC,MAAA;UAAA,OAAAP,GAAA,CAAArB,WAAA,CAAA6B,KAAA,GAAAD,MAAA;QAAA,EAA+B;QAAtCnB,EAAA,CAAAiB,YAAA,EAA6D;QAE7DjB,EAAA,CAAAa,cAAA,YAAO;QAAAb,EAAA,CAAAgB,MAAA,mBAAY;QAAAhB,EAAA,CAAAiB,YAAA,EAAQ;QAC3BjB,EAAA,CAAAa,cAAA,eAAmE;QAA5Db,EAAA,CAAAc,UAAA,2BAAAO,uDAAAF,MAAA;UAAA,OAAAP,GAAA,CAAArB,WAAA,CAAA+B,QAAA,GAAAH,MAAA;QAAA,EAAkC;QAAzCnB,EAAA,CAAAiB,YAAA,EAAmE;QAEnEjB,EAAA,CAAAa,cAAA,gBAAsB;QAAAb,EAAA,CAAAgB,MAAA,qBAAc;QAAAhB,EAAA,CAAAiB,YAAA,EAAS;;;QALtCjB,EAAA,CAAAuB,SAAA,GAA+B;QAA/BvB,EAAA,CAAAwB,UAAA,YAAAZ,GAAA,CAAArB,WAAA,CAAA6B,KAAA,CAA+B;QAG/BpB,EAAA,CAAAuB,SAAA,GAAkC;QAAlCvB,EAAA,CAAAwB,UAAA,YAAAZ,GAAA,CAAArB,WAAA,CAAA+B,QAAA,CAAkC"},"metadata":{},"sourceType":"module","externalDependencies":[]}